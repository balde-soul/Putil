{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Python: Current File",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal"
        },
        {
            "name": "decode_test",
            "type": "python",
            "request": "launch",
            "program": "model/decode_test.py",
            "console": "integratedTerminal"
        },
        // 终端debug，在参数中增加--remote_debug，然后运行命令，进入remote_debug_waiting，vscode选择此项运行
        {
            "name": "remote attach",
            "type": "python",
            "request": "attach",
            "port": 12345,
            "host": "127.0.0.1",
            "pathMappings": [
                {
                    "localRoot": "${workspaceFolder}",
                    "remoteRoot": "."
                }
            ]
        },
        // 该配置进行小型backbone的模型，
        //跑了train-evaluate-test-lr_reduce-train-evaluate-test-stop
        // debug 参数起作用，区别于tiny_for_test就一个debug参数
        {
            "name": "tiny_for_all_process_test",
            "type": "python",
            "request": "launch",
            "program": "model/main.py",
            "console": "integratedTerminal",
            "args": [
                "--gpus", "0",
                "--debug",
                "--sub_data", "85",
                "--train_data_using_rate", "0.03",
                "--evaluate_data_using_rate", "1.0",
                "--log_level", "Debug",
                "--save_dir", "./result",
                "--name", "_run_all_process_test",
                "--backbone_name", "tiny_for_test",
                "--naug",
                "--sub_data", "85", 
                "--input_height", "256",
                "--input_width", "256",
                "--auto_stop_patience", "5",
                "--auto_stop_mode", "max",
                "--auto_save_mode", "max",
                "--auto_save_delta", "0.1",
                "--auto_save_history_amount", "10",
                "--lr_reduce_init_lr", "0.0001",
                "--lr_reduce_lr_factor", "0.1",
                "--lr_reduce_lr_epsilon", "0.1",
                "--lr_reduce_lr_patience", "3",
                "--lr_reduce_lr_min", "1e-6",
                "--lr_reduce_mode", "max",
                "--batch_size", "16",
                "--epochs", "100",
                "--seed", "42",
                "--sample_evaluate_time_in_test", "100",
                "--log_interval", "1",
                "--summary_interval", "1",
                "--evaluate_interval", "1",
                "--test_batch_size", "1",
                "--test_data_using_rate", "1.0",
            ]
        },
        // 该配置进行小型backbone的训练，进行基本的模型验证, 也就是进行一个小backbone的overfit
        // 不进行evaluate与test
        {
            "name": "tiny_for_test",
            "type": "python",
            "request": "launch",
            "program": "model/main.py",
            "console": "integratedTerminal",
            "args": [
                "--backbone_name", "vgg_pretrained_vgg19",
                "--backbone_weight_path", "./pre_trained",
                "--train_data_using_rate", "0.004",
                "--naug",
                "--epochs", "100",
                "--batch_size", "32",
                "--log_level", "Info",
                "--seed", "42",
                "--log_interval", "1",
                "--summary_interval", "8",
                "--name", "_overfit_a_tiny_dataset",
                "--save_dir", "./result",
                "--test_off",
                "--evaluate_off",
                "--lr_reduce_init_lr", "0.001",
            ]
        },
        // 该配置进行小型backbone的训练，进行基本的模型验证, 也就是进行一个小backbone的overfit
        // 不进行evaluate与test
        {
            "name": "overfit_clock",
            "type": "python",
            "request": "launch",
            "program": "model/main.py",
            "console": "integratedTerminal",
            "args": [
                "--backbone_name", "vgg_pretrained_vgg19",
                "--backbone_weight_path", "./pre_trained",
                "--train_data_using_rate", "1.0",
                "--naug",
                "--sub_data", "85",
                "--epochs", "100",
                "--batch_size", "32",
                "--log_level", "Info",
                "--seed", "42",
                "--log_interval", "1",
                "--summary_interval", "8",
                "--name", "_overfit_the_clock_data",
                "--save_dir", "./result",
                "--test_off",
                "--evaluate_off",
                "--lr_reduce_init_lr", "0.001",
            ]
        },
        // 该配置进行小型已经预训练的backbone的训练，进行基本的模型验证, 也就是进行一个小backbone的overfit
        // 不进行evaluate与test
        {
            "name": "tiny_for_test_with_pretrained",
            "type": "python",
            "request": "launch",
            "program": "model/main.py",
            "console": "integratedTerminal",
            "args": [
                "--train_data_using_rate", "0.004",
                "--backbone_weight_path", "./pre_trained/",
                "--naug",
                "--fake_aug", "5",
                "--epochs", "25",
                "--batch_size", "32",
                "--log_level", "Debug",
                "--lr_reduce_init_lr", "0.001",
                "--seed", "42",
                "--log_interval", "1",
                "--summary_interval", "30",
                "--backbone_name", "vgg_pretrained_vgg19",
                "--name", "tiny_for_test_with_pretrained",
                "--save_dir", "./result",
                "--evaluate_data_using_rate", "0.005",
                "--test_data_using_rate", "0.00025",
                "--auto_stop_patience", "5",
                "--auto_stop_mode", "max",
                "--auto_save_mode", "max",
                "--auto_save_delta", "0.1",
                "--auto_save_history_amount", "10",
                "--lr_reduce_lr_factor", "0.1",
                "--lr_reduce_lr_epsilon", "0.1",
                "--lr_reduce_lr_patience", "3",
                "--lr_reduce_lr_min", "1e-6",
                "--lr_reduce_mode", "max",
                "--test_batch_size", "1",
                "--test_off",
                "--evaluate_interval", "1",
                "--evaluate_time_in_test",
                "--evaluate_off",
                "--sample_evaluate_time_in_test", "100",
            ]
        },
        {
            "name": "train_all",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--gpu_devices",
                "1",
                "--batch_size",
                "8",
                "--test_gpu",
                "--log_level",
                "Info",
                "--data_using_rate",
                "0.0008"
            ] // one gpu test
        },
        {
            "name": "train",
            "type": "python",
            "request": "launch",
            "program": "model/main.py",
            "console": "integratedTerminal",
            //"args": ["--gpu_devices", "0", "1", "--batch_size", "64", "--log_level", "Info"]   // gpu
            "args": [
                "--gpu_devices",
                "1",
                "--batch_size",
                "8",
                "--test_gpu",
                "--log_level",
                "Info",
                "--data_using_rate",
                "0.0008",
                "--valuate_interval",
                "1",
                "--summary_interval",
                "20"
            ] // one gpu test
            //"args": ["--gpu_devices", "1", "2", "--batch_size", "16", "--cpu"] // cpu
            //"args": ["--gpu_devices", "1", "2", "--batch_size", "16", "--cpu", "--test_data"] // test data on cpu
            //"args": ["--gpu_devices", "1", "2", "--batch_size", "512", "--test_gpu", "--test_data", "--log_level", "Info"] // test data on gpu
            //"args": ["--gpu_devices", "1", "2", "--batch_size", "512", "--log_level", "Info", "--data_using_rate", "0.1", "--naug"] // test tiny data fit
            //"args": ["--help"]    // help
        }
    ]
}